{"version":3,"sources":["service/auth.service.js","service/user.service.js","service/post.service.js","components/GenericMsgModal.js","components/pages/Posts/CustomEditor.js","service/tag.service.js","components/pages/Tag/TagSelection.js","components/pages/Posts/PostEdition.js","components/pages/Posts/Post-format.js","components/pages/Comments/CommentCard.js","components/pages/Comments/NewComment.js","components/pages/Comments/CommentList.js","components/pages/Comments/Comments.js","components/pages/Posts/PostDetails.js","components/pages/Posts/PostCard.js","components/pages/Posts/Posts-list.js","components/pages/Posts/Posts.js","components/pages/Signup/Signup-form.js","components/pages/Signup/Signup.js","service/admin.service.js","components/pages/Tag/TagCard.js","components/pages/Tag/EditTag.js","components/pages/Tag/Tag-list.js","components/pages/Tag/Tags.js","components/pages/UserProfile/User-format.js","components/pages/Admin/Admin-page.js","components/pages/UserProfile/UserProfile.js","components/pages/Login/Login-form.js","components/pages/Login/Login.js","components/pages/UserList/UserCard.js","components/pages/UserList/Users-list.js","components/pages/UserList/Users.js","components/routes/PrivateRoutes.js","components/routes/PublicRoutes.js","components/routes/Routes.js","components/layout/Navigation/Navigation.js","components/layout/Footer/Footer.js","components/ParticlesBackground.js","components/App.js","index.js"],"names":["AuthService","signup","data","app","post","login","logout","get","isLoggedIn","this","axios","create","baseURL","process","withCredentials","UserService","myProfile","seeOtherProfile","username","addFavUser","userId","put","addFavTag","tagName","getFavTags","removeFavTag","PostService","newPost","getOnePost","postId","getByAuthor","getAllPosts","getPostsByTags","tags","editPost","_id","newComment","getAllComments","GenericMsgModal","message","onClose","useState","show","setShow","Modal","Header","Title","Body","Footer","Button","variant","onClick","CustomEditor","state","editorState","EditorState","createEmpty","setState","createWithContent","ContentState","createFromBlockArray","convertFromHTML","props","postContent","updateState","convertToHTML","getCurrentContent","toolbarClassName","wrapperClassName","editorClassName","onEditorStateChange","Component","TagService","getAllTags","getAvailableTags","TagSelection","tagService","then","tagOptions","forEach","elem","push","value","label","name","catch","err","console","log","animatedComponents","makeAnimated","classNamePrefix","closeMenuOnSelect","components","isMulti","options","onChange","updateTags","defaultValue","initialTags","styles","menu","provided","zIndex","PostEdition","title","body","error","exists","hasLoaded","userService","UsersService","postService","match","params","stateCopy","tagIds","postData","e","target","preventDefault","history","Form","onSubmit","handleSubmit","Group","controlId","Label","Control","type","handleTitleChange","className","goBack","resetError","showEditor","PostFormat","author","authorIsUser","Container","Row","Card","Subtitle","to","displayName","dangerouslySetInnerHTML","__html","map","CommentCard","date","Col","md","Text","NewComment","comment","closeModal","refreshComments","handleInputChange","style","width","CommentList","comments","undefined","showModal","loadComments","response","size","marginBottom","onHide","loggedUser","Spinner","animation","role","length","elm","Comments","PostDetails","PostCard","slice","replace","PostsList","posts","loadPosts","Posts","SignupForm","pwd","email","birthdate","authService","Signup","storeUser","AdminService","newTag","getOneTag","tagId","editTag","getAllUsers","deleteOneUser","delete","deleteOnePost","deleteOneTag","TagCard","tag","description","adminService","refreshTags","showEditModal","isFav","removeFavBtn","addFavBtn","EditTag","isNew","tagData","TagList","isCreationModal","selectedTagData","loadTags","onlyFav","Tags","UserFormat","image","Img","AdminPage","UserProfile","user","promise","isOwnProfile","LoginForm","marginTop","Login","UserCard","refreshUsers","UsersList","users","loadUsers","Users","PrivateRoute","Comp","component","hasPermission","path","rest","render","PublicRoute","Routes","exact","Navigation","Navbar","Brand","src","height","alt","Nav","NavDropdown","position","top","left","ParticlesBackground","particles","number","density","enable","value_area","color","shape","stroke","polygon","nb_sides","opacity","random","anim","speed","opacity_min","sync","size_min","line_linked","distance","move","direction","straight","out_mode","bounce","attract","rotateX","rotateY","interactivity","detect_on","events","onhover","mode","onclick","resize","modes","grab","bubble","duration","repulse","particles_nb","remove","retina_detect","App","fetchUser","AuthServices","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0090f215.chunk.js","sourcesContent":["import axios from \"axios\"\n\nclass AuthService {\n    constructor() {\n        this.app = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/auth`,\n            withCredentials: true\n        })\n    }\n\n    signup = data => {\n        return this.app.post('/new-user', data)\n    }\n    login = data => this.app.post('/login', data)\n    logout = () => this.app.get('/logout')\n    isLoggedIn = () => this.app.get('/isLoggedIn')\n\n}\n\nexport default AuthService","import axios from \"axios\"\n\nclass UserService {\n    constructor() {\n        this.app = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/user`,\n            withCredentials: true\n        })\n    }\n\n    myProfile = () => this.app.get('/current-user')\n    seeOtherProfile = username => this.app.get(`/${username}`)\n    addFavUser = userId => this.app.put(`/add-fav-user/${userId}`)\n    addFavTag = tagName => this.app.put(`/add-fav-tag/${tagName}`)\n    getFavTags = () => this.app.get('/fav-tag-list')\n    removeFavTag = tagName => this.app.put(`/remove-fav-tag/${tagName}`)\n\n}\n\nexport default UserService","import axios from \"axios\"\n\nclass PostService {\n    constructor() {\n        this.app = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/post`,\n            withCredentials: true\n        })\n    }\n\n    newPost = data => this.app.post('/new', data)\n    getOnePost = postId => this.app.get(`/${postId}`)\n    getByAuthor = userId => this.app.get(`/getByAuthor/${userId}`)\n    getAllPosts = () => this.app.get('/getAllPosts')\n    getPostsByTags = tags => this.app.post('/getPostsByTags', tags)\n    editPost = data => this.app.put(`/${data._id}`, data)\n    newComment = (postId, data) => this.app.post(`/${postId}/new-comment`, data)\n    getAllComments = postId => this.app.get(`/${postId}/allComments`)\n\n}\n\nexport default PostService","import { useState } from 'react'\nimport { Modal, Button } from 'react-bootstrap'\n\nconst GenericMsgModal = ({ message, onClose }) => {\n    const [show, setShow] = useState(true)\n    const handleClose = () => {\n        setShow(false)\n        onClose()\n    }\n\n    return (\n        <Modal show={show}>\n            <Modal.Header>\n                <Modal.Title>Ups...</Modal.Title>\n            </Modal.Header>\n\n            <Modal.Body>\n                <p>{message}</p>\n            </Modal.Body>\n\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={handleClose}>Aceptar</Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\n\nexport default GenericMsgModal","import { EditorState, ContentState, convertFromHTML } from 'draft-js'\nimport { convertToHTML } from 'draft-convert'\nimport { Editor } from 'react-draft-wysiwyg'\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport { Component } from 'react'\n\n// https://blog.logrocket.com/building-rich-text-editors-in-react-using-draft-js-and-react-draft-wysiwyg/\n// https://stackoverflow.com/questions/63015073/how-to-customize-the-style-for-react-draft-wysiwyg\nclass CustomEditor extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            editorState: EditorState.createEmpty()\n        }\n    }\n\n    componentDidMount() {\n        this.setState(\n            {\n                editorState: EditorState.createWithContent(\n                    ContentState\n                        .createFromBlockArray(convertFromHTML(this.props.postContent)))\n            })\n    }\n\n    onEditorStateChange(editorState) {\n        this.setState({ editorState })\n        this.props.updateState(convertToHTML(editorState.getCurrentContent()))\n    }\n\n    render() {\n        const { editorState } = this.state\n\n        return (\n            <div>\n                <Editor\n                    toolbarClassName=\"toolbarClassName\"\n                    wrapperClassName=\"wrapperClassName\"\n                    editorClassName=\"t-postEditor\"\n                    editorState={editorState}\n                    onEditorStateChange={state => this.onEditorStateChange(state)}\n                />\n            </div>\n        )\n    }\n}\n\nexport default CustomEditor","import axios from \"axios\"\n\nclass TagService {\n    constructor() {\n        this.app = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/tag`,\n            withCredentials: true\n        })\n    }\n\n    getAllTags = () => this.app.get('/tag-list')\n    getAvailableTags = () => this.app.get('/available-tag-list')\n\n}\n\nexport default TagService","import { Component } from 'react'\nimport Select from 'react-select'\nimport makeAnimated from 'react-select/animated'\n\nimport TagService from './../../../service/tag.service'\n\nclass TagSelection extends Component {\n    constructor() {\n        super()\n        this.state = {\n            tags: []\n        }\n\n        this.tagService = new TagService()\n    }\n\n    componentDidMount() {\n        this.tagService\n            .getAllTags()\n            .then(tags => {\n                let tagOptions = []\n                tags.data.forEach(elem => {\n                    tagOptions.push({ value: elem._id, label: elem.name })\n                })\n\n                this.setState({ tags: tagOptions })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const animatedComponents = makeAnimated()\n\n        return (\n            <Select\n                classNamePrefix=\"tag-selection\"\n                closeMenuOnSelect={false}\n                components={animatedComponents}\n                isMulti\n                options={this.state.tags}\n                onChange={tags => this.props.updateTags(tags)}\n                defaultValue={this.props.initialTags}\n                styles={{ menu: provided => ({ ...provided, zIndex: 9999 }) }}\n            />\n        )\n    }\n}\n\nexport default TagSelection","import { Component } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport UsersService from '../../../service/user.service'\nimport PostService from '../../../service/post.service'\nimport \"react-draft-wysiwyg/dist/react-draft-wysiwyg.css\"\nimport GenericMsgModal from '../../GenericMsgModal'\nimport CustomEditor from './CustomEditor'\nimport TagSelection from '../Tag/TagSelection'\n\n// https://blog.logrocket.com/building-rich-text-editors-in-react-using-draft-js-and-react-draft-wysiwyg/\n// https://stackoverflow.com/questions/63015073/how-to-customize-the-style-for-react-draft-wysiwyg\nclass PostEdition extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            post: {\n                _id: null,\n                title: '',\n                body: '',\n                tags: []\n            },\n            error: {\n                exists: false,\n                message: null\n            },\n            hasLoaded: false\n        }\n\n        this.userService = new UsersService()\n        this.postService = new PostService()\n    }\n\n    componentDidMount() {\n        let postId = this.props.match.params.postId\n\n        if (postId !== \"new\") {\n            this.postService\n                .getOnePost(postId)\n                .then(post => {\n                    this.setState({ post: post.data, hasLoaded: true })\n                })\n                .catch(err => console.log(err))\n        } else {\n            let stateCopy = { ...this.state }\n            stateCopy.hasLoaded = true\n            this.setState(stateCopy)\n        }\n    }\n\n    updateTags(tags) {\n        let stateCopy = { ...this.state.post }\n        let tagIds = []\n\n        tags.forEach(elem => {\n            tagIds.push(elem.value)\n        })\n\n        stateCopy.tags = tagIds\n        this.setState({ post: stateCopy })\n    }\n\n    updateState(postData) {\n        let stateCopy = { ...this.state.post }\n        stateCopy.body = postData\n        this.setState({ post: stateCopy })\n    }\n\n    handleTitleChange(e) {\n        let stateCopy = { ...this.state.post }\n        const value = e.target.value\n        stateCopy.title = value\n        this.setState({ post: stateCopy })\n    }\n\n    handleSubmit(e) {\n        e.preventDefault()\n\n        let promise\n\n        if (this.state.post._id === null) {\n            promise = this.postService\n                .newPost(this.state.post)\n        } else {\n            promise = this.postService\n                .editPost(this.state.post)\n        }\n\n        promise\n            .then(() => {\n                this.props.history.push(\"/\")\n            })\n            .catch(err => {\n                this.setState(\n                    {\n                        error: {\n                            exists: true,\n                            message: \"Error al publicar el post. Asegúrate de indicar título y texto.\"\n                        }\n                    })\n            })\n    }\n\n    resetError() {\n        this.setState({\n            error: {\n                exists: false,\n                message: null\n            }\n        })\n    }\n\n    render() {\n        const showEditor = () => {\n            if (this.state.hasLoaded) {\n                let tagIds = []\n\n                this.state.post.tags.forEach(elem => {\n                    tagIds.push({ value: elem._id, label: elem.name })\n                })\n\n                return (\n                    <>\n                        <Form onSubmit={e => this.handleSubmit(e)}>\n                            <Form.Group controlId=\"title\">\n                                <Form.Label>Título</Form.Label>\n                                <Form.Control type=\"text\" value={this.state.post.title} onChange={e => this.handleTitleChange(e)} name=\"title\" />\n                                <TagSelection\n                                    initialTags={tagIds}\n                                    updateTags={tags => this.updateTags(tags)}\n                                />\n                            </Form.Group>\n                            <br />\n\n                            <CustomEditor updateState={data => this.updateState(data)} postContent={this.state.post.body} />\n                            <Button className=\"t-bgBtn\" type=\"submit\" >Publicar post</Button>\n                            <Button onClick={this.props.history.goBack} className=\"btn goBackBtn btn-primary\">Volver</Button>\n                        </Form>\n\n                        {this.state.error.exists ? <GenericMsgModal message={this.state.error.message} onClose={() => this.resetError()} /> : null}\n                    </>\n                )\n            } else {\n                return null\n            }\n        }\n\n        return showEditor()\n    }\n}\n\nexport default PostEdition","import { Button, Card, Container, Row } from 'react-bootstrap'\nimport { FaEdit } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\n\nconst PostFormat = ({ _id, title, body, tags, author, authorIsUser }) => {\n\n    return (\n        <Container>\n            <Row>\n                <Card className=\"t-card\">\n                    <Card.Body>\n                        <Card.Title>{title}</Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">\n                            <Link className=\"grey\" to={`/user/${author.username}`}>{author.displayName}</Link>\n                        </Card.Subtitle>\n                        <Card.Body><div dangerouslySetInnerHTML={{ __html: body }} /></Card.Body>\n                        <span>Tags: {tags.map(elem => <span key={elem._id} className=\"t-taglabel\">{elem.name}</span>)}</span>\n                        {authorIsUser ? <Link to={`/edit-post/${_id}`}><Button className=\"editBtn\"><FaEdit /></Button></Link> : null}\n                    </Card.Body>\n                </Card>\n            </Row>\n        </Container>\n    )\n}\n\nexport default PostFormat","import { Card, Col } from 'react-bootstrap'\n\nconst CommentCard = ({ body, author, date }) => {\n    return (\n        <Col md={3}>\n            <Card className=\"t-card\">\n                <Card.Body>\n                    <Card.Text>{body}</Card.Text>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{author.displayName}</Card.Subtitle>\n                    <Card.Text>{date}</Card.Text>\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nexport default CommentCard","import { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport PostService from '../../../service/post.service'\n\nclass NewComment extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            comment: {\n                body: ''\n            }\n        }\n\n        this.postService = new PostService()\n    }\n\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ comment: { ...this.state.comment, [name]: value } })\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.postService\n            .newComment(this.props.postId, this.state.comment)\n            .then(() => {\n                this.props.closeModal()\n                this.props.refreshComments()\n            })\n            .catch(err => console.log(err))\n    }\n\n\n    render() {\n        return (\n            <Form onSubmit={e => this.handleSubmit(e)}>\n                <Form.Group controlId=\"body\">\n                    <Form.Control type=\"text\" value={this.state.body} onChange={e => this.handleInputChange(e)} name=\"body\" />\n                </Form.Group>\n\n                <Button className=\"t-bgBtn\" style={{ width: '100%' }} type=\"submit\">Publicar comentario</Button>\n            </Form>\n        )\n    }\n}\n\nexport default NewComment","import CommentCard from './CommentCard'\n\nimport { Component } from 'react'\nimport PostService from './../../../service/post.service'\n\nimport { Row, Spinner, Modal, Button } from 'react-bootstrap'\nimport NewComment from './../Comments/NewComment'\n\n\n\nclass CommentList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            comments: undefined,\n            showModal: false\n        }\n        this.postService = new PostService()\n\n    }\n\n    componentDidMount() {\n        this.loadComments()\n    }\n\n    loadComments() {\n        this.postService\n            .getAllComments(this.props.postId)\n            .then(response => {\n                this.setState({ comments: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const { comments } = this.state\n        const renderModal = () => {\n            if (comments) {\n                return (\n                    <>\n                        <Button onClick={() => this.setState({ showModal: true })} className=\"t-bgBtn\" size=\"sm\" style={{ marginBottom: '20px' }}>Añadir un comentario</Button>\n                        <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\n                            <Modal.Header> <Modal.Title>Nuevo comentario</Modal.Title> </Modal.Header>\n                            <Modal.Body>\n                                <NewComment postId={this.props.postId} loggedUser={this.props.loggedUser} closeModal={() => this.setState({ showModal: false })} refreshComments={() => this.loadComments()} />\n                            </Modal.Body>\n                        </Modal>\n                    </>\n                )\n            } else {\n                return (\n                    <Spinner animation=\"border\" role=\"status\">\n                        <span className=\"sr-only\"></span>\n                    </Spinner>\n                )\n            }\n        }\n\n        const renderComments = () => {\n            if (comments && !comments.length) {\n                return (<p>Este post no tiene comentarios aún</p>)\n            } else if (comments) {\n                return (\n                    <Row>\n                        {comments.map(elm => <CommentCard key={elm._id} {...elm} />)}\n                    </Row>\n                )\n            }\n        }\n\n        return (\n            <>\n                {renderModal()}\n                {renderComments()}\n            </>\n        )\n    }\n}\n\nexport default CommentList","import { Container } from 'react-bootstrap'\n\nimport CommentList from './CommentList'\n\nconst Comments = ({ loggedUser, postId }) => {\n    return (\n        <Container>\n            <hr />\n            <h3>Comentarios de este post</h3>\n            <hr />\n            <CommentList loggedUser={loggedUser} postId={postId} />\n        </Container>\n    )\n}\n\nexport default Comments","import { Component } from 'react'\nimport PostService from '../../../service/post.service'\nimport { Button, Container, Spinner } from 'react-bootstrap'\nimport PostFormat from './Post-format'\nimport Comments from './../Comments/Comments'\n\nclass PostDetails extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            post: undefined\n        }\n        this.postService = new PostService()\n    }\n\n    componentDidMount() {\n        const { postId } = this.props.match.params\n\n        this.postService\n            .getOnePost(postId)\n            .then(post => this.setState({ post: post.data }))\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Container>\n                {\n                    !this.state.post ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\"></span>\n                        </Spinner>\n                        :\n                        <>\n                            <PostFormat {...this.state.post} authorIsUser={this.props.loggedUser._id === this.state.post.author._id} />\n                            <Button onClick={this.props.history.goBack} className=\"btn goBackBtn btn-primary\">Volver</Button>\n                            <Comments loggedUser={this.props.loggedUser} postId={this.state.post._id} />\n                        </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default PostDetails","import { Card } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\n\nconst PostCard = ({ _id, title, author, body, history }) => {\n\n    return (\n        <Link to={`/posts/${_id}`} className=\"no-decor\">\n            <Card className=\"marged t-bgColor t-card\">\n                <Card.Body className=\"lat-padded\">\n                    <Card.Title className=\"big\">{title}</Card.Title>\n                    <Card.Subtitle className=\"mb-2 text-muted\">{author.displayName}</Card.Subtitle>\n                    <Card.Text><span className=\"t-italic\" dangerouslySetInnerHTML={{ __html: body.slice(0, 100).replace(/(<([^>]+)>)/ig, '') }} /></Card.Text>\n                </Card.Body>\n            </Card>\n        </Link>\n    )\n}\n\nexport default PostCard","import { Component } from 'react'\nimport PostService from './../../../service/post.service'\nimport UserService from './../../../service/user.service'\nimport PostCard from './PostCard'\nimport { Link } from 'react-router-dom'\nimport './Posts.css'\n\nimport { Spinner } from 'react-bootstrap'\n\nclass PostsList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            posts: undefined\n        }\n        this.postService = new PostService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount() {\n        this.loadPosts()\n    }\n\n    loadPosts() {\n        this.userService\n            .getFavTags()\n            .then(tags => {\n                if (tags.data.length) {\n                    return this.postService.getPostsByTags({ tags: tags.data })\n                } else {\n                    return this.postService.getAllPosts()\n                }\n            })\n            .then(response => this.setState({ posts: response.data }))\n            .catch(err => console.log(err))\n\n    }\n\n    render() {\n        const { posts } = this.state\n\n        return (\n            !posts\n                ?\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\"></span>\n                </Spinner>\n                :\n                <>\n                    {this.props.loggedUser.role === \"USER\" ?\n                        <Link to=\"/edit-post/new\" className=\"t-bgBtn btn btn-primary\">Crear nuevo post</Link>\n                        : null}\n\n                    <div className=\"posts-list\">\n                        {posts.map(elm => <PostCard key={elm._id} {...elm} authorIsUser={this.props.loggedUser._id === elm.author._id} history={this.props.history} />)}\n                    </div>\n                </>\n\n        )\n    }\n}\n\nexport default PostsList","import { Container } from 'react-bootstrap'\n\nimport PostsList from './Posts-list'\n\nconst Posts = ({ loggedUser, history }) => {\n    return (\n        <Container>\n            <hr />\n            <PostsList loggedUser={loggedUser} history={history} />\n        </Container>\n    )\n}\n\nexport default Posts","import { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport AuthService from './../../../service/auth.service'\nimport GenericMsgModal from '../../GenericMsgModal'\nimport './../../App.css'\n\nclass SignupForm extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            pwd: '',\n            displayName: '',\n            email: '',\n            birthdate: '',\n            error: {\n                exists: false,\n                message: null\n            }\n        }\n        this.authService = new AuthService()\n    }\n\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.authService\n            .signup(this.state)\n            .then(response => {\n                this.props.history.push('/login')\n            })\n            .catch(err => {\n                this.setState(\n                    {\n                        error: {\n                            exists: true,\n                            message: `Error al crear tu usuario. Quizá ya seas user. \n                                Si no lo eres, comprueba tus datos (recuerda que todos \n                                los campos son obligatorios).`\n                        }\n                    })\n            })\n    }\n\n    resetError() {\n        this.setState({\n            error: {\n                exists: false,\n                message: null\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Form onSubmit={e => this.handleSubmit(e)}>\n\n                    <Form.Group controlId=\"displayName\">\n                        <Form.Label>Nombre completo</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.displayName} onChange={e => this.handleInputChange(e)} name=\"displayName\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Nombre de usuario</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.username} onChange={e => this.handleInputChange(e)} name=\"username\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"email\">\n                        <Form.Label>Mail</Form.Label>\n                        <Form.Control type=\"email\" value={this.state.email} onChange={e => this.handleInputChange(e)} name=\"email\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" value={this.state.pwd} onChange={e => this.handleInputChange(e)} name=\"pwd\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"birthdate\">\n                        <Form.Label>Fecha de nacimiento</Form.Label>\n                        <Form.Control type=\"date\" value={this.state.birthdate} onChange={e => this.handleInputChange(e)} name=\"birthdate\" />\n                    </Form.Group>\n\n                    <Button className=\"t-bgBtn\" style={{ width: '100%' }} type=\"submit\">¡Vamos allá!</Button>\n                    <Link className=\"btn t-bgBtn btn-primary t-bgBtn\" style={{ width: '100%' }} to={'/login'}>Sí que soy tagger</Link>\n                </Form>\n                {this.state.error.exists ? <GenericMsgModal message={this.state.error.message} onClose={() => this.resetError()} /> : null}\n            </>\n        )\n    }\n}\n\nexport default SignupForm","import { Container, Row, Col } from 'react-bootstrap'\nimport SignupForm from './Signup-form'\n\nconst Signup = ({ storeUser, history }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md={6}>\n                    <h1>Registro</h1>\n                    <hr />\n                    <SignupForm storeUser={storeUser} history={history} />\n                    <hr />\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Signup","import axios from \"axios\"\n\nclass AdminService {\n    constructor() {\n        this.app = axios.create({\n            baseURL: `${process.env.REACT_APP_BASE_URL}/admin`,\n            withCredentials: true\n        })\n    }\n\n    newTag = data => this.app.post('/new-tag', data)\n    getOneTag = tagId => this.app.get(`/edit-tag/${tagId}`)\n    editTag = data => this.app.put(`/edit-tag/${data._id}`, data)\n    getAllUsers = () => this.app.get('/users-list')\n    deleteOneUser = userId => this.app.delete(`/delete-user/${userId}`)\n    deleteOnePost = postId => this.app.delete(`/delete-post/${postId}`)\n    deleteOneTag = tagId => this.app.delete(`/delete-tag/${tagId}`)\n\n}\n\nexport default AdminService","import { Component } from 'react'\nimport { Card, Col, Button } from 'react-bootstrap'\nimport { FaEdit, FaStar, FaTrashAlt } from 'react-icons/fa'\nimport AdminService from '../../../service/admin.service'\nimport UserService from '../../../service/user.service'\nimport './Tags.css'\n\nclass TagCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            tag: {\n                name: '',\n                _id: '',\n                description: ''\n            }\n        }\n\n        this.adminService = new AdminService()\n        this.userService = new UserService()\n    }\n\n    componentDidMount() {\n        this.setState({ tag: this.props.tag })\n    }\n\n    handleSubmit(tagId) {\n        this.adminService\n            .editTag(this.state.tag)\n            .then(() => {\n                this.props.refreshTags()\n            })\n            .catch(err => console.log(err))\n    }\n\n    addFavBtn() {\n        this.userService\n            .addFavTag(this.state.tag.name)\n            .then(() => {\n                this.props.refreshTags()\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    removeFavBtn() {\n        this.userService\n            .removeFavTag(this.state.tag.name)\n            .then(() => {\n                this.props.refreshTags()\n            })\n            .catch(err => console.log(err))\n\n    }\n\n    render() {\n\n        const buttons = () => {\n            if (this.props.loggedUser.role === \"ADMIN\") {\n                return <Button className=\"editBtn\" onClick={() => this.props.showEditModal()}><FaEdit /></Button>\n            } else if (this.props.isFav) {\n                return <Button className=\"btn btn-danger removeFavBtn\" onClick={() => this.removeFavBtn()}><FaTrashAlt /></Button>\n            } else {\n                return <Button className=\"favBtn\" onClick={() => this.addFavBtn()}><FaStar /></Button>\n            }\n        }\n\n        return (\n            <Col md={4} >\n                <Card className=\"t-card\">\n                    <Card.Body>\n                        <Card.Title>{this.state.tag.name}</Card.Title>\n                        <Card.Text>{this.state.tag.description}</Card.Text>\n                        {buttons()}\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nexport default TagCard","import { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport AdminService from '../../../service/admin.service'\nimport GenericMsgModal from '../../GenericMsgModal'\n\nclass EditTag extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            tag: {\n                _id: null,\n                name: '',\n                description: '',\n            },\n            error: {\n                exists: false,\n                message: null\n            },\n            isNew: true\n        }\n\n        this.adminService = new AdminService()\n    }\n\n    componentDidMount() {\n        this.setState({ isNew: this.props.isNew, tag: { ...this.props.tagData } })\n    }\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ tag: { ...this.state.tag, [name]: value } })\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault()\n\n        let promise\n\n        if (this.state.isNew) {\n            promise = this.adminService.newTag(this.state.tag)\n        } else {\n            promise = this.adminService.editTag(this.state.tag)\n        }\n\n        promise\n            .then(() => {\n                this.props.closeModal()\n                this.props.refreshTags()\n            })\n            .catch(err => {\n                this.setState(\n                    {\n                        error: {\n                            exists: true,\n                            message: `Error al ${this.state.isNew ? \"crear\" : \"editar\"} la etiqueta. No se admiten nombres duplicados ni vacíos.`\n                        }\n                    })\n            })\n\n    }\n\n    resetError() {\n        this.setState({\n            error: {\n                exists: false,\n                message: null\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Form onSubmit={e => this.handleSubmit(e)}>\n\n                    <Form.Group controlId=\"name\">\n                        <Form.Label>Nombre</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.tag.name} onChange={e => this.handleInputChange(e)} name=\"name\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"description\">\n                        <Form.Label>Descripción</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.tag.description} onChange={e => this.handleInputChange(e)} name=\"description\" />\n                    </Form.Group>\n\n                    <Button className=\"t-bgBtn\" style={{ width: '100%' }} type=\"submit\">{this.state.isNew ? \"Crear\" : \"Editar\"} tag</Button>\n\n                </Form>\n\n                {this.state.error.exists ? <GenericMsgModal message={this.state.error.message} onClose={() => this.resetError()} /> : null}\n            </>\n        )\n    }\n}\n\nexport default EditTag","import TagCard from './TagCard'\n\nimport { Component } from 'react'\nimport AdminService from './../../../service/admin.service'\n\nimport { Row, Spinner, Modal, Button } from 'react-bootstrap'\nimport EditTag from './EditTag'\n\nimport UserService from '../../../service/user.service'\nimport TagService from './../../../service/tag.service'\n\nclass TagList extends Component {\n    constructor() {\n        super()\n        this.state = {\n            tags: undefined,\n            showModal: false,\n            isCreationModal: false,\n            selectedTagData: {\n                _id: null,\n                name: '',\n                description: ''\n            }\n        }\n        this.adminService = new AdminService()\n        this.tagService = new TagService()\n        this.userService = new UserService()\n\n    }\n\n    componentDidMount() {\n        this.loadTags()\n    }\n\n    loadTags() {\n        let promise\n\n        if (this.props.onlyFav) {\n            promise = this.userService.getFavTags()\n        } else if (this.props.loggedUser.role === \"ADMIN\") {\n            promise = this.tagService.getAllTags()\n        } else {\n            promise = this.tagService.getAvailableTags()\n        }\n\n        promise\n            .then(response => {\n                this.setState({ tags: [] })\n                this.setState({ tags: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    showEditModal({ _id, name, description }) {\n        this.setState({\n            showModal: true,\n            isCreationModal: false,\n            selectedTagData: { _id, name, description }\n        })\n    }\n\n    render() {\n        const { tags } = this.state\n\n        const addTagBtn = () => {\n            if (this.props.loggedUser.role === \"ADMIN\") {\n                return (< Button onClick={() => this.setState({ showModal: true, isCreationModal: true })\n                } className=\"t-bgBtn\" size=\"sm\" style={{ marginBottom: '20px' }\n                }> Añadir una tag nueva</Button >)\n            } else {\n                return null\n            }\n        }\n\n        return (\n            !tags\n                ?\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\"></span>\n                </Spinner>\n                :\n                <>\n                    {addTagBtn()}\n                    <Row>\n                        {tags.map(elm => <TagCard\n                            key={elm._id}\n                            tag={{ ...elm }}\n                            refreshTags={() => this.loadTags()}\n                            loggedUser={this.props.loggedUser}\n                            showEditModal={() => this.showEditModal({ ...elm })}\n                            isFav={this.props.onlyFav} />)}\n                    </Row>\n\n                    <Button onClick={this.props.history.goBack} className=\"btn goBackBtn btn-primary\">Volver</Button>\n\n                    <Modal show={this.state.showModal} onHide={() => this.setState({ showModal: false })}>\n                        <Modal.Header> <Modal.Title>{this.state.isCreationModal ? \"Nueva\" : \"Editar\"} tag</Modal.Title> </Modal.Header>\n                        <Modal.Body>\n                            <EditTag\n                                loggedUser={this.props.loggedUser}\n                                closeModal={() => this.setState({ showModal: false })}\n                                refreshTags={() => this.loadTags()}\n                                isNew={this.state.isCreationModal}\n                                tagData={{ ...this.state.selectedTagData }} />\n                        </Modal.Body>\n                    </Modal>\n                </>\n\n        )\n    }\n}\n\nexport default TagList","import { Container } from 'react-bootstrap'\n\nimport TagList from './Tag-list'\n\nconst Tags = ({ loggedUser, history, onlyFav }) => {\n    return (\n        <Container>\n            <h1>{onlyFav ? \"Tags favoritas\" : \"Listado de tags\"}</h1>\n            <hr />\n            <TagList loggedUser={loggedUser} history={history} onlyFav={onlyFav} />\n        </Container>\n    )\n}\n\nexport default Tags","import { Card, Container, Row, Col } from 'react-bootstrap'\n\nconst UserFormat = ({ displayName, username, image, email }) => {\n\n    return (\n        <Container>\n            <Row>\n                <Col >\n                    <Card className=\"t-card\">\n                        <Card.Body>\n                            <Card.Img>{image}</Card.Img>\n                            <Card.Title>{username}</Card.Title>\n                            <Card.Subtitle className=\"mb-2 text-muted\">{displayName}</Card.Subtitle>\n                            <Card.Text>{email}</Card.Text>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default UserFormat","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nconst AdminPage = () => {\n    return (\n        <>\n            <Link to=\"/users\" className=\"btn btn-primary t-bgBtn\">Lista de Users</Link>\n        </>\n    )\n}\n\nexport default AdminPage","import { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport UserService from '../../../service/user.service'\nimport { Button, Container, Spinner } from 'react-bootstrap'\nimport UserFormat from './User-format'\nimport AdminPage from '../Admin/Admin-page'\nimport PostService from '../../../service/post.service'\nimport PostCard from '../Posts/PostCard'\nimport './../../App.css'\n\nclass UserProfile extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            user: undefined,\n            posts: []\n        }\n        this.userService = new UserService()\n        this.postService = new PostService()\n    }\n\n    componentDidMount() {\n        let promise\n\n        if (!this.props.isOwnProfile) {\n            let username = this.props.match.params.username\n            promise = this.userService.seeOtherProfile(username)\n        } else {\n            promise = this.userService.myProfile()\n        }\n\n        promise\n            .then(response => {\n                this.setState({ user: response.data })\n                return response.data\n            })\n            .then(user => {\n                return this.postService.getByAuthor(user._id)\n            })\n            .then(response => {\n                this.setState({ posts: response.data })\n            })\n            .catch(err => console.log(err))\n\n\n    }\n\n    render() {\n\n        const conditionalBtn = () => {\n            if (this.props.loggedUser.role === \"ADMIN\" && (this.props.loggedUser.username === this.state.user.username)) {\n                return <AdminPage />\n            } else if (this.props.isOwnProfile) {\n                return <Link to=\"/fav-tags\" className=\"btn t-bgBtn btn-primary\">Lista de tags favoritas</Link>\n            }\n        }\n\n        return (\n            <Container>\n                {\n                    !this.state.user ?\n                        <Spinner animation=\"border\" role=\"status\">\n                            <span className=\"sr-only\"></span>\n                        </Spinner>\n                        :\n                        <>\n                            <h1>Perfil de {this.state.user.username}</h1>\n                            <UserFormat {...this.state.user} />\n                            <Button onClick={this.props.history.goBack} className=\"btn goBackBtn btn-primary\">Volver</Button>\n                            <hr />\n                            {conditionalBtn()}\n                            <div className=\"posts-list\">\n                                {this.state.posts.map(elm => <PostCard key={elm._id} {...elm} authorIsUser={this.props.loggedUser._id === elm.author._id} history={this.props.history} />)}\n                            </div>\n                        </>\n                }\n            </Container>\n        )\n    }\n}\n\nexport default UserProfile","import { Component } from 'react'\nimport { Form, Button } from 'react-bootstrap'\nimport GenericMsgModal from '../../GenericMsgModal'\nimport AuthService from './../../../service/auth.service'\n\nclass LoginForm extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            username: '',\n            pwd: '',\n            error: {\n                exists: false,\n                message: null\n            }\n        }\n        this.authService = new AuthService()\n    }\n\n\n    handleInputChange(e) {\n        const { name, value } = e.target\n        this.setState({ [name]: value })\n    }\n\n\n    handleSubmit(e) {\n        e.preventDefault()\n        this.authService\n            .login(this.state)\n            .then(response => {\n                this.props.storeUser(response.data)\n                this.props.history.push('/')\n            })\n            .catch(err => {\n                this.setState(\n                    {\n                        error: {\n                            exists: true,\n                            message: \"El usuario o la contraseña son incorrectos.\"\n                        }\n                    })\n            })\n    }\n\n    resetError() {\n        this.setState({\n            error: {\n                exists: false,\n                message: null\n            }\n        })\n    }\n\n    render() {\n        return (\n            <>\n                <Form onSubmit={e => this.handleSubmit(e)}>\n\n                    <Form.Group controlId=\"username\">\n                        <Form.Label>Nombre de usuario</Form.Label>\n                        <Form.Control type=\"text\" value={this.state.username} onChange={e => this.handleInputChange(e)} name=\"username\" />\n                    </Form.Group>\n\n                    <Form.Group controlId=\"password\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" value={this.state.pwd} onChange={e => this.handleInputChange(e)} name=\"pwd\" />\n                    </Form.Group>\n\n                    <Button className=\"t-bgBtn\" style={{ width: '100%', marginTop: '20px' }} type=\"submit\">Iniciar sesión</Button>\n                </Form>\n\n                {this.state.error.exists ? <GenericMsgModal message={this.state.error.message} onClose={() => this.resetError()} /> : null}\n            </>\n        )\n    }\n}\n\nexport default LoginForm","import { Container, Row, Col } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport LoginForm from './Login-form'\n\nconst Login = ({ storeUser, history }) => {\n    return (\n        <Container>\n            <Row className=\"justify-content-center\">\n                <Col md={6}>\n                    <h1>Inicio de sesión</h1>\n                    <hr />\n                    <LoginForm storeUser={storeUser} history={history} />\n                    <hr />\n                    <Link to=\"/signup\" className=\"btn t-bgBtn btn-primary\">¿Aún no eres un tagger? ¡Únete!</Link>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\n\nexport default Login","import { Component } from 'react'\nimport { Card, Col, Button } from 'react-bootstrap'\nimport { FaTrashAlt } from 'react-icons/fa'\nimport { Link } from 'react-router-dom'\nimport AdminService from '../../../service/admin.service'\nimport './Users.css'\n\nclass UserCard extends Component {\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            user: {\n                username: '',\n                _id: '',\n                displayName: ''\n            }\n        }\n\n        this.adminService = new AdminService()\n    }\n\n    componentDidMount() {\n        this.setState({ user: this.props.user })\n    }\n\n    handleSubmit(userId) {\n        this.adminService\n            .deleteOneUser(this.state.user._id)\n            .then(() => {\n                this.props.refreshUsers()\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        return (\n            <Col md={3} >\n                <Card className=\"t-card\">\n                    <Card.Body>\n                        <Card.Title>\n                            <Link className=\"black\" to={`/user/${this.state.user.username}`}>{this.state.user.username}</Link>\n                        </Card.Title>\n                        <Card.Subtitle className=\"mb-2 text-muted\">{this.state.user.displayName}</Card.Subtitle>\n                        <Button className=\"removeUserBtn btn-danger\" onClick={() => this.handleSubmit(this.state.user.userId)}><FaTrashAlt /></Button>\n                    </Card.Body>\n                </Card>\n            </Col>\n        )\n    }\n}\n\nexport default UserCard","import { Component } from 'react'\nimport AdminService from './../../../service/admin.service'\nimport UserCard from './UserCard'\n\nimport { Row, Spinner, Button } from 'react-bootstrap'\n\nclass UsersList extends Component {\n\n    constructor() {\n        super()\n        this.state = {\n            users: undefined\n        }\n        this.adminService = new AdminService()\n    }\n\n\n    componentDidMount() {\n        this.loadUsers()\n    }\n\n    loadUsers() {\n        this.adminService\n            .getAllUsers()\n            .then(response => {\n                this.setState({ users: response.data })\n            })\n            .catch(err => console.log(err))\n    }\n\n    render() {\n        const { users } = this.state\n\n        return (\n            !users\n                ?\n                <Spinner animation=\"border\" role=\"status\">\n                    <span className=\"sr-only\"></span>\n                </Spinner>\n                :\n                <>\n                    <Row>\n                        {users.map(elm => <UserCard key={elm._id} user={{ ...elm }} refreshUsers={() => this.loadUsers()} />)}\n                    </Row>\n                    <Button onClick={this.props.history.goBack} className=\"btn goBackBtn btn-primary\">Volver</Button>\n                </>\n\n        )\n    }\n}\n\nexport default UsersList","import { Container } from 'react-bootstrap'\n\nimport UsersList from './Users-list'\n\nconst Users = ({ loggedUser, history }) => {\n    return (\n        <Container>\n            <h1>Listado de users</h1>\n            <hr />\n            <UsersList loggedUser={loggedUser} history={history} />\n        </Container>\n    )\n}\n\nexport default Users","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PrivateRoute = ({ component: Comp, loggedUser, hasPermission, path, ...rest }) => {\n    return (\n        <Route\n            path={path}\n            {...rest}\n            render={(props) => {\n                return loggedUser && hasPermission ? <Comp {...props} loggedUser={loggedUser} history={props.history} {...rest} /> : <Redirect to=\"/login\" />\n            }}\n        />\n    )\n}\n\nexport default PrivateRoute","import React from 'react'\nimport { Route, Redirect } from 'react-router-dom'\n\nconst PublicRoute = ({ component: Comp, loggedUser, storeUser, path, ...rest }) => {\n    return (\n        <Route\n            path={path}\n            {...rest}\n            render={(props) => {\n                return loggedUser ? <Redirect to=\"/\" /> : <Comp {...props} storeUser={storeUser} history={props.history} />\n            }}\n        />\n    )\n}\n\nexport default PublicRoute","import React from \"react\"\nimport { Switch } from 'react-router-dom'\nimport PostEdition from \"../pages/Posts/PostEdition\"\nimport PostDetails from \"../pages/Posts/PostDetails\"\nimport Posts from \"../pages/Posts/Posts\"\nimport Signup from \"../pages/Signup/Signup\"\nimport Tags from \"../pages/Tag/Tags\"\nimport UserProfile from \"../pages/UserProfile/UserProfile\"\nimport Login from \"./../pages/Login/Login\"\nimport Users from \"./../pages/UserList/Users\"\nimport PrivateRoute from \"./../routes/PrivateRoutes\"\nimport PublicRoute from \"./../routes/PublicRoutes\"\n\nconst Routes = ({ storeUser, loggedUser }) => {\n    return (\n        <Switch>\n            (<>\n                <PublicRoute exact path=\"/login\" loggedUser={loggedUser} storeUser={storeUser} component={Login} />\n                <PublicRoute exact path=\"/signup\" loggedUser={loggedUser} storeUser={storeUser} component={Signup} />\n                <PrivateRoute exact path=\"/\" loggedUser={loggedUser} hasPermission={true} component={Posts} />\n                <PrivateRoute exact path=\"/users\" loggedUser={loggedUser} hasPermission={loggedUser && loggedUser.role === \"ADMIN\"} component={Users} />\n                <PrivateRoute exact path=\"/my-profile\" loggedUser={loggedUser} hasPermission={true} isOwnProfile={true} component={UserProfile} />\n                <PrivateRoute exact path=\"/user/:username\" loggedUser={loggedUser} hasPermission={true} isOwnProfile={false} component={UserProfile} />\n                <PrivateRoute exact path=\"/tags\" loggedUser={loggedUser} hasPermission={true} onlyFav={false} component={Tags} />\n                <PrivateRoute exact path=\"/fav-tags\" loggedUser={loggedUser} hasPermission={true} onlyFav={true} component={Tags} />\n                <PrivateRoute path=\"/posts/:postId\" loggedUser={loggedUser} hasPermission={true} component={PostDetails} />\n                <PrivateRoute path=\"/edit-post/:postId\" loggedUser={loggedUser} hasPermission={loggedUser && loggedUser.role === \"USER\"} component={PostEdition} />\n            </>)\n        </Switch>\n    )\n}\n\nexport default Routes","import { Navbar, NavDropdown, Nav } from 'react-bootstrap'\nimport { Redirect } from 'react-router-dom'\nimport { Link } from 'react-router-dom'\nimport './Navigation.css'\n\nimport AuthService from './../../../service/auth.service'\n\nconst Navigation = ({ loggedUser, storeUser }) => {\n\n    const logout = () => {\n\n        const authService = new AuthService()\n\n        authService\n            .logout()\n            .then(() => {\n                storeUser(undefined)\n            })\n            .catch(err => console.log(err))\n    }\n\n    const userLinks = () => {\n        if (loggedUser.role === \"USER\") {\n            return (\n                <>\n                    <Link to=\"/edit-post/new\" className=\"nav-link\"><p>Post nuevo</p></Link>\n                    <Link to=\"/tags\" className=\"nav-link\"><p>Lista de tags</p></Link>\n                </>)\n        } else {\n            return (\n                <>\n                    <Link to=\"/tags\" className=\"nav-link\"><p>Lista de tags</p></Link>\n                    <Link to=\"/users\" className=\"nav-link\"><p>Lista de users</p></Link>\n                </>)\n        }\n    }\n\n    return (\n        <Navbar variant=\"dark\" className=\"justify-content-around navigation\">\n            <Link to=\"/\">\n                <Navbar.Brand>\n                    <img\n                        src=\"/white-logo.png\"\n                        width=\"30\"\n                        height=\"30\"\n                        className=\"d-inline-block align-top t-logo\"\n                        alt=\"tagger logo\"\n                    />\n                </Navbar.Brand>\n            </Link>\n            <Nav className=\"mr-auto\">\n                {\n                    !loggedUser ?\n                        <>\n                            <Redirect to=\"/login\" />\n                        </>\n                        :\n                        <>\n                            <Link to=\"/my-profile\" className=\"nav-link t-profileBtn\"><p> | Hola, {loggedUser.username} | </p></Link>\n\n                            <NavDropdown title=\"Menú\" className=\"t-link\">\n                                {userLinks()}\n                                <span onClick={() => logout()} className=\"nav-link logoutBtn\">Cerrar sesión</span>\n                            </NavDropdown>\n                        </>\n                }\n            </Nav>\n        </Navbar>\n    )\n}\n\nexport default Navigation","import './Footer.css'\n\nconst Footer = () => <footer>Proudly founded by Nat Canales | All rights reserved</footer>\n\nexport default Footer","import React, { Component } from 'react'\nimport Particles from 'react-particles-js'\n\nconst style = {\n    width: \"99vw\",\n    height: \"100%\",\n    position: \"fixed\",\n    top: 0,\n    left: 0,\n    zIndex: -1\n}\n\n\nclass ParticlesBackground extends Component {\n\n    render() {\n        return (\n            <div style={style}>\n                <Particles\n                    params={{\n                        particles: {\n                            number: {\n                                value: 200,\n                                density: {\n                                    enable: true,\n                                    value_area: 1803.4120608655228\n                                }\n                            },\n                            color: {\n                                value: \"#FF0080\"\n                            },\n                            shape: {\n                                type: \"star\",\n                                stroke: {\n                                    width: 0,\n                                    color: \"#000000\"\n                                },\n                                polygon: {\n                                    nb_sides: 4\n                                },\n                                image: {\n                                    src: \"img/github.svg\",\n                                    width: 100,\n                                    height: 100\n                                }\n                            },\n                            opacity: {\n                                value: 0.5,\n                                random: false,\n                                anim: {\n                                    enable: false,\n                                    speed: 1,\n                                    opacity_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            size: {\n                                value: 1,\n                                random: true,\n                                anim: {\n                                    enable: false,\n                                    speed: 40,\n                                    size_min: 0.1,\n                                    sync: false\n                                }\n                            },\n                            line_linked: {\n                                enable: true,\n                                distance: 0,\n                                color: \"#000\",\n                                opacity: 0.3687847739990702,\n                                width: 0.6413648243462091\n                            },\n                            move: {\n                                enable: true,\n                                speed: 2,\n                                direction: \"none\",\n                                random: false,\n                                straight: false,\n                                out_mode: \"out\",\n                                bounce: false,\n                                attract: {\n                                    enable: false,\n                                    rotateX: 600,\n                                    rotateY: 1200\n                                }\n                            }\n                        },\n                        interactivity: {\n                            detect_on: \"window\",\n                            events: {\n                                onhover: {\n                                    enable: true,\n                                    mode: \"repulse\"\n                                },\n                                onclick: {\n                                    enable: false,\n                                    mode: \"bubble\"\n                                },\n                                resize: true\n                            },\n                            modes: {\n                                grab: {\n                                    distance: 400,\n                                    line_linked: {\n                                        opacity: 1\n                                    }\n                                },\n                                bubble: {\n                                    distance: 400,\n                                    size: 40,\n                                    duration: 2,\n                                    opacity: 8,\n                                    speed: 3\n                                },\n                                repulse: {\n                                    distance: 100,\n                                    duration: 0.4\n                                },\n                                push: {\n                                    particles_nb: 4\n                                },\n                                remove: {\n                                    particles_nb: 2\n                                }\n                            }\n                        },\n                        retina_detect: true\n                    }}\n                />\n            </div>\n        )\n    }\n}\n\nexport default ParticlesBackground","import { Component } from 'react'\nimport { Container } from 'react-bootstrap'\n\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport \"./App.css\"\n\nimport AuthServices from './../service/auth.service'\nimport Routes from './routes/Routes'\nimport Navigation from './layout/Navigation/Navigation'\nimport Footer from './layout/Footer/Footer'\nimport ParticlesBackground from './ParticlesBackground'\n\nclass App extends Component {\n  constructor() {\n    super()\n    this.state = { loggedUser: undefined }\n    this.authService = new AuthServices()\n  }\n\n  storeUser = loggedUser => {\n    this.setState({ loggedUser })\n  }\n\n  fetchUser = () => {\n    this.authService\n      .isLoggedIn()\n      .then(response => this.setState({ loggedUser: response.data }))\n      .catch(() => this.setState({ loggedUser: undefined }))\n  }\n\n  componentDidMount() {\n    this.fetchUser()\n  }\n\n  render() {\n    return (\n      <div className=\"App\" >\n        <Navigation storeUser={user => this.storeUser(user)} loggedUser={this.state.loggedUser} />\n        <Container className=\"padded\">\n          <Routes storeUser={user => this.storeUser(user)} loggedUser={this.state.loggedUser} />\n          <ParticlesBackground />\n        </Container>\n        <Footer />\n      </div>)\n  }\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './components/App'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nReactDOM.render(\n  <Router>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Router>,\n  document.getElementById('root')\n)"],"sourceRoot":""}